# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class KsInputData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rvs: List[float]=None, cdf: str=None):  # noqa: E501
        """KsInputData - a model defined in Swagger

        :param rvs: The rvs of this KsInputData.  # noqa: E501
        :type rvs: List[float]
        :param cdf: The cdf of this KsInputData.  # noqa: E501
        :type cdf: str
        """
        self.swagger_types = {
            'rvs': List[float],
            'cdf': str
        }

        self.attribute_map = {
            'rvs': 'rvs',
            'cdf': 'cdf'
        }
        self._rvs = rvs
        self._cdf = cdf

    @classmethod
    def from_dict(cls, dikt) -> 'KsInputData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ksInputData of this KsInputData.  # noqa: E501
        :rtype: KsInputData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rvs(self) -> List[float]:
        """Gets the rvs of this KsInputData.


        :return: The rvs of this KsInputData.
        :rtype: List[float]
        """
        return self._rvs

    @rvs.setter
    def rvs(self, rvs: List[float]):
        """Sets the rvs of this KsInputData.


        :param rvs: The rvs of this KsInputData.
        :type rvs: List[float]
        """
        if rvs is None:
            raise ValueError("Invalid value for `rvs`, must not be `None`")  # noqa: E501

        self._rvs = rvs

    @property
    def cdf(self) -> str:
        """Gets the cdf of this KsInputData.


        :return: The cdf of this KsInputData.
        :rtype: str
        """
        return self._cdf

    @cdf.setter
    def cdf(self, cdf: str):
        """Sets the cdf of this KsInputData.


        :param cdf: The cdf of this KsInputData.
        :type cdf: str
        """
        if cdf is None:
            raise ValueError("Invalid value for `cdf`, must not be `None`")  # noqa: E501

        self._cdf = cdf
